import "utils.jyn"
import "error_handling.jyn"
import "security.jyn"

var commands = {}

func initConsole() {
    println("Initializing Private Virtual Web Console...")
    loadCommands()
}

func loadCommands() {
    commands = {
        "help": showHelp,
        "exit": exitConsole,
        "status": showStatus,
        "secure": checkSecurityStatus,
        "memory": showMemoryUsage,
        "network": checkNetworkStatus
    }
}

func startConsole() {
    var running = true
    while (running) {
        var input = readInput("console> ")
        if (input in commands) {
            try {
                commands[input]()
            } catch (e) {
                handleError(e)
            }
        } else {
            println("Unknown command. Type 'help' for a list of commands.")
        }
    }
}

func showHelp() {
    println("Available commands: help, exit, status, secure, memory, network")
}

func exitConsole() {
    println("Exiting console...")
    running = false
}

func showStatus() {
    println("Console is running.")
}

func checkSecurityStatus() {
    var status = getSecurityStatus()
    println("Security Status:", status)
}

func showMemoryUsage() {
    var usage = getMemoryUsage()
    println("Memory Usage:", usage)
}

func checkNetworkStatus() {
    var status = getNetworkStatus()
    println("Network Status:", status)
}
